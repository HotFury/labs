<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABLCAIAAAAJerXgAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAABueSURBVHhezdwJ0JZV2QdwzVzDismlVLTUCSnXxlwwnVHJ
        nLCYMhxUUL9CERMLRWGUVLARFLVYBNm0RCU1AxOXTy0tc9dSW63MJbNsUculLJXv99z/m/M+vAu8m/b9
        Z77Tdc59znWuc51rOw/v5xprrsAaa7TQa6+99tvf/va3ve1tiHXXXRdt0ISOsM4669TUyggHy2GttdbS
        1YYGq9Zbbz1tBm2h1c0IWGtJzas9RCqtJdZmsPPIFhYCAsq+GYkwiFqMogV9M0xNF5oVZMGmm246YMCA
        z372s1/+8pfHjh27++6777HHHoceeujw4cOPPPLIHXfcce+99/7Yxz42cODAfv36bbLJJn379m3mEBgB
        ErT91C5ItfHGG2+77baf/OQnjz/++FNOOWXQoEE777zzsGHDhg4dOnr06AMPPHC77bbbcsstTSakTbfY
        YosPfOADiD59+my11VbbbLONETQ+m2222fve977111+fAIwgW7QCJdTUymgRuPkCbfypT31q5MiRn/nM
        Zwh02mmnTZ8+/c477/z1r3/99NNP//vf/15e4f7777/hhht+97vf/e1vf/vrX//63e9+99577zXn2Wef
        XbRo0VVXXXVdhQkTJkyZMmX8+PFHH330Oeec841vfONb3/qWM3/uc58bM2bMYYcddtJJJ+23337bb7+9
        k3zoQx/aZ599Ro0aNXPmzAULFkycOPHSSy/91a9+9eSTT7700kvZF33llVc+9thjiJdffvmee+6ZM2fO
        TTfddPPNN0eAxx9/nJzf//7358+ff9999z3wwAM4zJ07938rmD9t2rTZs2fPmDHDLv9TwY4Oe+yxx+66
        666IqVOnXnPNNU5BZmZBWrfVUA2FRVMM54gjjpg8ebKD3XrrrX//+9//+c9/Us0//vEPRASFN9544/XX
        X3/ttde0ISCfEFFlxv/zn/9kHIz861//evXVV+t+xaemli+nbie3KUXXQz3DK6+88uc///mJJ55A4Oks
        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
</value>
  </data>
</root>